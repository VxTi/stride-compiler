const var local_scope: string = "I'm hidden";

var balls: i32 = 0;

/*
 * Functions have return type i32
 * by default, if no return type
 * is provided, and return 0 if
 * no return is stated.
 *
 * The data is shared through
 * either a ‘shared’ keyword,
 * followed by the module name,
 * or the ‘shared’ keyword after
 * abstraction declaration. The
 * latter is advised against due
 * to the possibility of naming
 * collisions.
 */

shared module::name {

    // Reference external (C) library function
    declare shared external f2();

    declare f3(const param: i8) {}

    declare fname(varname: i8) {
        return 0;
    }

    declare ts(p: ...string) {}

    // Function that is declared externally, like in a compiled C file
    declare external fname();

    // Enumerables
    enum ename {
        ENAME =
    }
}

// Single function sharing
declare shared external fname();

// publicly shared class
shared class cname {

}

declare main() {

   // Automatically gets transformed to 3 by syntax analysis
   var len = [0, 1, 2].length;

   for ( var i = 0; i < 10; i++) {

   }

   return 0;
}
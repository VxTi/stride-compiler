import "external library";

let k: unknown = f();

let illegal: string = "test" + () "balls";

switch (k) {

            case 0:
                system::println("Hello, World!");
                break;
            case 1:

                    break;



}

let l: kneo::balls::nigga::test = kek;


let k: i8 = 1 + 10 * sin(g * 2) + 3 * 2;

let a: i8 = 0, b: i8 = 2;


const i: i8 = 0;

define external test();

module test::modulename {

    define external test();

    define blyat(i: none) {
        for (let i: i8 = 0; i < 10; i++) {}
        for (let i: i8 = 0; i < 10; i++) {

        }


        throw Error("oops");
    }



    define main(args: string[]) {
        system::println("Hello, World!");
    }

    define external println(message: string, args: ...string);


    define external println(message: string, args: ...string);

    define func(test: string, test2: ...string) {

        let nil: i8 = null;

        do {

        } while (knee);

        const k: unknown = 0;

        do {
            system::println("Hello, World!");
        } while (++x < 10);

        try {
            system::println("Hello, World!");
        } catch (e: Error) {
            system::println("Hello, World!");
            throw Error("fuck");
        }

        if (kek) {
            try {
                let content: string = io::read_file("/file/path");
                let socket: socket = io::socket::create();
            }
            catch (err: Error) {
                system::println("Something went wrong");
            }
        }

        let k: i8 = 0;

        while (true) {}

        for (;;) {}

        do {
            sock::s();

        } while (true);;;

     }
}